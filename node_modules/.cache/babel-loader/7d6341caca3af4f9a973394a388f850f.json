{"ast":null,"code":"import { GET_POSTS, GET_POSTS_SUCCESS, GET_POSTS_ERROR } from '../types';\nimport AxiosClient from '../config/AxiosConfig';\nexport function getPosts() {\n  debugger;\n  return async dispatch => {\n    debugger;\n    dispatch(getPostsStart());\n\n    try {\n      await AxiosClient.get(`/posts`).then(posts => {\n        de;\n        dispatch(getPostsSuccess(posts.data));\n      });\n    } catch (error) {\n      dispatch(getPostsError());\n    }\n  };\n}\nexport const getPostsStart = () => ({\n  type: GET_POSTS\n});\nexport const getPostsSuccess = data => ({\n  type: GET_POSTS_SUCCESS,\n  payload: data\n});\nexport const getPostsError = () => ({\n  type: GET_POSTS_ERROR\n});","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/actions/PostsActions.js"],"names":["GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_ERROR","AxiosClient","getPosts","dispatch","getPostsStart","get","then","posts","de","getPostsSuccess","data","error","getPostsError","type","payload"],"mappings":"AAAA,SACIA,SADJ,EAEIC,iBAFJ,EAGIC,eAHJ,QAKK,UALL;AAMA,OAAOC,WAAP,MAAwB,uBAAxB;AAGA,OAAO,SAASC,QAAT,GAAoB;AACvB;AACA,SAAO,MAAOC,QAAP,IAAoB;AAC/B;AACQA,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;;AAEA,QAAI;AACA,YAAMH,WAAW,CAACI,GAAZ,CAAiB,QAAjB,EACDC,IADC,CACIC,KAAK,IAAI;AACXC,QAAAA,EAAE;AACFL,QAAAA,QAAQ,CAACM,eAAe,CAACF,KAAK,CAACG,IAAP,CAAhB,CAAR;AACH,OAJC,CAAN;AAKH,KAND,CAME,OAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAACS,aAAa,EAAd,CAAR;AACH;AACJ,GAbD;AAcH;AAED,OAAO,MAAMR,aAAa,GAAG,OAAO;AAChCS,EAAAA,IAAI,EAAEf;AAD0B,CAAP,CAAtB;AAIP,OAAO,MAAMW,eAAe,GAAGC,IAAI,KAAK;AACpCG,EAAAA,IAAI,EAAEd,iBAD8B;AAEpCe,EAAAA,OAAO,EAAEJ;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAME,aAAa,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEb;AAD0B,CAAP,CAAtB","sourcesContent":["import {\n    GET_POSTS,\n    GET_POSTS_SUCCESS,\n    GET_POSTS_ERROR\n}\nfrom '../types';\nimport AxiosClient from '../config/AxiosConfig';\n\n\nexport function getPosts() {\n    debugger\n    return async (dispatch) => {\ndebugger\n        dispatch(getPostsStart());\n\n        try {\n            await AxiosClient.get(`/posts`)\n                .then(posts => {\n                    de\n                    dispatch(getPostsSuccess(posts.data));\n                })\n        } catch (error) {\n            dispatch(getPostsError());\n        }\n    }\n}\n\nexport const getPostsStart = () => ({\n    type: GET_POSTS\n})\n\nexport const getPostsSuccess = data => ({\n    type: GET_POSTS_SUCCESS,\n    payload: data\n})\n\nexport const getPostsError = () => ({\n    type: GET_POSTS_ERROR\n})"]},"metadata":{},"sourceType":"module"}
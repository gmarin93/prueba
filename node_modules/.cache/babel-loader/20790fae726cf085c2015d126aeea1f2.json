{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const postsData = useSelector(state => state.postsState.posts);\n  const commentsData = useSelector(state => state.commentsState.comments);\n  const [matchedData, MatchData] = useState([]);\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts()); //   Posts(postsList);\n      //Getting comments data\n\n      dispatch(getComments()); //   Comments(commentsList);\n    }\n    /**\n     * Match posts and their right comments\n     */\n\n\n    function matchData() {\n      if (Object.keys(postsData).length > 0) {\n        postsData.map(post => {\n          let commentsFiltered = comments.filter(e => e.postid === post.postid);\n          MatchData({\n            post: post,\n            comments: commentsFiltered\n          });\n        });\n      }\n    }\n\n    getDatsAPI();\n    setTimeout(() => {\n      matchData();\n    }, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Index, \"YEHxHfxdJvI8ep3/nqWtb5tbmKg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","getComments","Index","dispatch","postsData","state","postsState","posts","commentsData","commentsState","comments","matchedData","MatchData","getDatsAPI","matchData","Object","keys","length","map","post","commentsFiltered","filter","e","postid","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA7B,CAA7B;AACA,QAAMC,YAAY,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,aAAN,CAAoBC,QAAhC,CAAhC;AAEA,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASgB,UAAT,GAAsB;AACpB;AACAV,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR,CAFoB,CAGpB;AACA;;AACAG,MAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR,CALoB,CAMpB;AACD;AAED;AACJ;AACA;;;AACI,aAASa,SAAT,GAAqB;AAEnB,UAAIC,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAAvB,GAAgC,CAApC,EAAuC;AACrCb,QAAAA,SAAS,CAACc,GAAV,CAAeC,IAAD,IAAU;AAEtB,cAAIC,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CACpBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACI,MADJ,CAAvB;AAIAX,UAAAA,SAAS,CAAC;AACRO,YAAAA,IAAI,EAAEA,IADE;AAERT,YAAAA,QAAQ,EAAEU;AAFF,WAAD,CAAT;AAKD,SAXD;AAYD;AACF;;AAEDP,IAAAA,UAAU;AAEVW,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,SAAS;AACV,KAFS,EAEP,IAFO,CAAV;AAGD,GAvCQ,EAuCN,EAvCM,CAAT;AAyCA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlDD;;GAAMZ,K;UACaJ,W,EAECC,W,EACGA,W;;;KAJjBG,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n  const postsData = useSelector((state) => state.postsState.posts);\n  const commentsData = useSelector((state) => state.commentsState.comments);\n\n  const [matchedData, MatchData] = useState([]);\n\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts());\n      //   Posts(postsList);\n      //Getting comments data\n      dispatch(getComments());\n      //   Comments(commentsList);\n    }\n\n    /**\n     * Match posts and their right comments\n     */\n    function matchData() {\n    \n      if (Object.keys(postsData).length > 0) {\n        postsData.map((post) => {\n        \n          let commentsFiltered = comments.filter(\n            (e) => e.postid === post.postid\n          );\n\n          MatchData({\n            post: post,\n            comments: commentsFiltered,\n          });\n          \n        });\n      }\n    }\n\n    getDatsAPI();\n\n    setTimeout(() => {\n      matchData();\n    }, 5000);\n  }, []);\n\n  return <div></div>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
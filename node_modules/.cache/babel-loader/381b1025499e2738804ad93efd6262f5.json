{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s2();\n\n  const dispatch = useDispatch(); //   const [posts, Posts] = useState([]);\n  //   const [comments, Comments] = useState([]);\n\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      const postsList = () => dispatch(getPosts()); //   Posts(postsList);\n      //Getting comments data\n\n\n      const commentsList = () => dispatch(getComments()); //   Comments(commentsList);\n\n    }\n    /**\n     * Match posts and their right comments\n     */\n\n\n    function matchData() {\n      _s();\n\n      const posts = useSelector(state => state.postsState.posts);\n      const comments = useSelector(state => state.commentsState.comments);\n      debugger;\n      let postObject = {};\n      let postsArray = [];\n\n      if (Object.keys(posts).length > 0) {\n        posts.map(post => {\n          debugger;\n          let commentsFiltered = comments.filter(e => e.postid === post.postid);\n          postObject = {\n            post: post,\n            comments: commentsFiltered\n          };\n          postsArray.push(postObject);\n        });\n        console.log(postsArray);\n      }\n    }\n\n    _s(matchData, \"wq4OV9hamvZpMhaUZFyO7f9ScFQ=\", false, function () {\n      return [useSelector, useSelector];\n    });\n\n    getDatsAPI();\n    setTimeout(e => {\n      matchData();\n    }, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Index, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","getComments","Index","dispatch","getDatsAPI","postsList","commentsList","matchData","posts","state","postsState","comments","commentsState","postObject","postsArray","Object","keys","length","map","post","commentsFiltered","filter","e","postid","push","console","log","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADkB,CAGpB;AACA;;AAEED,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd;AACJ;AACA;AACI,aAASO,UAAT,GAAsB;AACpB;AACA,YAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACH,QAAQ,EAAT,CAAhC,CAFoB,CAGtB;AACE;;;AACA,YAAMM,YAAY,GAAG,MAAMH,QAAQ,CAACF,WAAW,EAAZ,CAAnC,CALoB,CAMtB;;AACC;AAEL;AACA;AACA;;;AACI,aAASM,SAAT,GAAqB;AAAA;;AAEjB,YAAMC,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,KAA3B,CAAzB;AACA,YAAMG,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,aAAN,CAAoBD,QAA9B,CAA5B;AAEA;AACF,UAAIE,UAAU,GAAG,EAAjB;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAIC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAnB,GAA4B,CAAhC,EAAmC;AACjCT,QAAAA,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;AAChB;AACF,cAAIC,gBAAgB,GAAGT,QAAQ,CAACU,MAAT,CACpBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACI,MADJ,CAAvB;AAIAV,UAAAA,UAAU,GAAG;AACXM,YAAAA,IAAI,EAAEA,IADK;AAEXR,YAAAA,QAAQ,EAAES;AAFC,WAAb;AAKAN,UAAAA,UAAU,CAACU,IAAX,CAAgBX,UAAhB;AACD,SAZD;AAaAY,QAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACD;AACF;;AAzCa,OAgBLP,SAhBK;AAAA,cAkBIR,WAlBJ,EAmBOA,WAnBP;AAAA;;AA2CdK,IAAAA,UAAU;AAETuB,IAAAA,UAAU,CAACL,CAAC,IAAE;AACXf,MAAAA,SAAS;AACZ,KAFU,EAET,IAFS,CAAV;AAIF,GAjDQ,EAiDN,EAjDM,CAAT;AAmDA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1DD;;IAAML,K;UACaJ,W;;;KADbI,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n//   const [posts, Posts] = useState([]);\n//   const [comments, Comments] = useState([]);\n\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      const postsList = () => dispatch(getPosts());\n    //   Posts(postsList);\n      //Getting comments data\n      const commentsList = () => dispatch(getComments());\n    //   Comments(commentsList);\n    }\n\n/**\n * Match posts and their right comments\n */\n    function matchData() {\n\n        const posts = useSelector(state => state.postsState.posts);\n        const comments = useSelector(state => state.commentsState.comments);\n\n        debugger\n      let postObject = {};\n      let postsArray = [];\n\n      if (Object.keys(posts).length > 0) {\n        posts.map((post) => {\n            debugger\n          let commentsFiltered = comments.filter(\n            (e) => e.postid === post.postid\n          );\n\n          postObject = {\n            post: post,\n            comments: commentsFiltered,\n          };\n          \n          postsArray.push(postObject);\n        });\n        console.log(postsArray);\n      } \n    }\n\n    getDatsAPI();\n\n     setTimeout(e=>{\n        matchData();\n    },5000);\n\n  }, []);\n\n  return <div></div>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
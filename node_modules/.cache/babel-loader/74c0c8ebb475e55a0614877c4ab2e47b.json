{"ast":null,"code":"import _slicedToArray from\"/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import CommentList from'./CommentList';import{getCommentsState,getCommentsStateSuccesss}from'../actions/CommentsActions';import{useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Post=function Post(_ref){var postData=_ref.postData;useEffect(function(){function gettingNewComments(){if(display)getComments();else getCommentsSuccess();};gettingNewComments();},[]);var dispatch=useDispatch();var getComments=function getComments(){return dispatch(getCommentsState());};var getCommentsSuccess=function getCommentsSuccess(){return dispatch(getCommentsStateSuccesss());};var comments=postData.comments,post=postData.post;var id=post.id,title=post.title,body=post.body;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),display=_useState2[0],displayComments=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-weight-bold p-3 text-uppercase\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"p\",{className:\"card-text text-capitalize\",children:body})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer mx-auto p-2\",children:[display?/*#__PURE__*/_jsx(CommentList,{id:id,comments:comments},id):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return displayComments(!display);},children:\"See Comments\"},id),display?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return displayComments(!display);},children:\"Hide Comments\"}):null]})]})});};export default Post;","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/src/components/Post.js"],"names":["React","useState","useEffect","CommentList","getCommentsState","getCommentsStateSuccesss","useDispatch","Post","postData","gettingNewComments","display","getComments","getCommentsSuccess","dispatch","comments","post","id","title","body","displayComments"],"mappings":"yMAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAAQC,gBAAR,CAAyBC,wBAAzB,KAAwD,4BAAxD,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAiB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CAE5BN,SAAS,CAAC,UAAM,CAEd,QAASO,CAAAA,kBAAT,EAA6B,CAC3B,GAAGC,OAAH,CACEC,WAAW,GADb,IAGEC,CAAAA,kBAAkB,GAErB,EAEDH,kBAAkB,GAEnB,CAZQ,CAYN,EAZM,CAAT,CAeA,GAAMI,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAME,CAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAd,EAApB,CACA,GAAMQ,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAMC,CAAAA,QAAQ,CAACR,wBAAwB,EAAzB,CAAd,EAA3B,CApB4B,GAsBpBS,CAAAA,QAtBoB,CAsBDN,QAtBC,CAsBpBM,QAtBoB,CAsBVC,IAtBU,CAsBDP,QAtBC,CAsBVO,IAtBU,IAuBpBC,CAAAA,EAvBoB,CAuBAD,IAvBA,CAuBpBC,EAvBoB,CAuBhBC,KAvBgB,CAuBAF,IAvBA,CAuBhBE,KAvBgB,CAuBTC,IAvBS,CAuBAH,IAvBA,CAuBTG,IAvBS,eAyBOjB,QAAQ,CAAC,KAAD,CAzBf,wCAyBrBS,OAzBqB,eAyBZS,eAzBY,eA2B5B,mBACE,YAAK,SAAS,CAAC,wCAAf,uBACE,aAAK,SAAS,CAAC,MAAf,wBACE,UAAG,SAAS,CAAC,qCAAb,UAAoDF,KAApD,EADF,cAEE,YAAK,SAAS,CAAC,WAAf,uBACE,UAAG,SAAS,CAAC,2BAAb,UAA0CC,IAA1C,EADF,EAFF,cAKE,aAAK,SAAS,CAAC,yBAAf,WAEGR,OAAO,cACN,KAAC,WAAD,EAAsB,EAAE,CAAEM,EAA1B,CAA8B,QAAQ,CAAEF,QAAxC,EAAkBE,EAAlB,CADM,cAGN,eAAiB,OAAO,CAAE,yBAAMG,CAAAA,eAAe,CAAC,CAACT,OAAF,CAArB,EAA1B,0BAAaM,EAAb,CALJ,CAUGN,OAAO,cACN,eAAQ,OAAO,CAAE,yBAAMS,CAAAA,eAAe,CAAC,CAACT,OAAF,CAArB,EAAjB,2BADM,CAIJ,IAdN,GALF,GADF,EADF,CA2BD,CAtDD,CAwDA,cAAeH,CAAAA,IAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport CommentList from './CommentList';\nimport {getCommentsState,getCommentsStateSuccesss} from '../actions/CommentsActions';\nimport { useDispatch } from \"react-redux\";\n\n\nconst Post = ({ postData}) => {\n\n  useEffect(() => {\n    \n    function gettingNewComments(){\n      if(display)\n        getComments();\n      else\n        getCommentsSuccess();\n\n    };\n\n    gettingNewComments();\n       \n  }, []);\n\n\n  const dispatch = useDispatch();\n  \n  const getComments = () => dispatch(getCommentsState());\n  const getCommentsSuccess = () => dispatch(getCommentsStateSuccesss());\n\n  const { comments, post } = postData;\n  const { id, title, body } = post;\n\n  const [display, displayComments] = useState(false);\n\n  return (\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n      <div className=\"card\">\n        <p className=\"font-weight-bold p-3 text-uppercase\">{title}</p>\n        <div className=\"card-body\">\n          <p className=\"card-text text-capitalize\">{body}</p>\n        </div>\n        <div className=\"card-footer mx-auto p-2\">\n\n          {display ? (\n            <CommentList key={id} id={id} comments={comments}/>\n          ) : (\n            <button key={id} onClick={() => displayComments(!display)}>\n              See Comments\n            </button>\n          )}\n\n          {display ? (\n            <button onClick={() => displayComments(!display)}>\n              Hide Comments\n            </button>\n          ) : null}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
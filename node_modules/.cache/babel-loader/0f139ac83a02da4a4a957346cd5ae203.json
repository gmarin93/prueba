{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const postsData = useSelector(state => state.postsState.posts);\n  const commentsData = useSelector(state => state.commentsState.comments);\n  const [matchedData, MatchingData] = useState([]);\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts()); //   Posts(postsList);\n      //Getting comments data\n\n      dispatch(getComments()); //   Comments(commentsList);\n    }\n\n    ;\n    getDatsAPI();\n    matchData();\n  }, []);\n  /**\n    * Match posts and their right comments\n    */\n\n  function matchData() {\n    debugger;\n\n    if (Object.keys(postsData).length > 0) {\n      postsData.map(post => {\n        debugger;\n        let commentsFiltered = commentsData.filter(e => e.postid === post.postId);\n        MatchingData({\n          post: post,\n          comments: commentsFiltered\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Index, \"Szw8UxbH16+p2PQf8zh4gRi/4y8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","getComments","Index","dispatch","postsData","state","postsState","posts","commentsData","commentsState","comments","matchedData","MatchingData","getDatsAPI","matchData","Object","keys","length","map","post","commentsFiltered","filter","e","postid","postId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA7B,CAA7B;AACA,QAAMC,YAAY,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,aAAN,CAAoBC,QAAhC,CAAhC;AAEA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASgB,UAAT,GAAsB;AACpB;AACAV,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR,CAFoB,CAGpB;AACA;;AACAG,MAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR,CALoB,CAMpB;AACD;;AAAA;AAEDY,IAAAA,UAAU;AACVC,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAkBC;AACH;AACA;;AACI,WAASA,SAAT,GAAqB;AAAC;;AAClB,QAAIC,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAAvB,GAAgC,CAApC,EAAuC;AACrCb,MAAAA,SAAS,CAACc,GAAV,CAAeC,IAAD,IAAU;AAAC;AACvB,YAAIC,gBAAgB,GAAGZ,YAAY,CAACa,MAAb,CACpBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACK,MADJ,CAAvB;AAIAZ,QAAAA,YAAY,CAAC;AACXO,UAAAA,IAAI,EAAEA,IADK;AAEXT,UAAAA,QAAQ,EAAEU;AAFC,SAAD,CAAZ;AAID,OATD;AAUD;AACF;;AAEL,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7CD;;GAAMlB,K;UACaJ,W,EAECC,W,EACGA,W;;;KAJjBG,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n  const postsData = useSelector((state) => state.postsState.posts);\n  const commentsData = useSelector((state) => state.commentsState.comments);\n\n  const [matchedData, MatchingData] = useState([]);\n\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts());\n      //   Posts(postsList);\n      //Getting comments data\n      dispatch(getComments());\n      //   Comments(commentsList);\n    };\n\n    getDatsAPI();\n    matchData();\n  }, []);\n\n\n   /**\n     * Match posts and their right comments\n     */\n    function matchData() {debugger\n        if (Object.keys(postsData).length > 0) {\n          postsData.map((post) => {debugger\n            let commentsFiltered = commentsData.filter(\n              (e) => e.postid === post.postId\n            );\n  \n            MatchingData({\n              post: post,\n              comments: commentsFiltered,\n            });\n          });\n        }\n      }\n\n  return <div></div>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
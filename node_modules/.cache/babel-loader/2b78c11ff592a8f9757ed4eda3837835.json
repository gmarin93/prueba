{"ast":null,"code":"import { GET_COMMENTS, GET_COMMENTS_SUCCESS, GET_COMMENTS_ERROR, ADD_COMMENT, ADD_COMMENT_SUCCESS, ADD_COMMENT_ERROR } from \"../types\";\nimport AxiosClient from \"../config/AxiosConfig\";\nexport function getComments() {\n  return async dispatch => {\n    dispatch(getCommentsStart());\n\n    try {\n      await AxiosClient.get(`/comments`).then(comments => {\n        dispatch(getCommentsSuccess(comments.data));\n      });\n    } catch (error) {\n      dispatch(getCommentsError());\n    }\n  };\n}\nexport function AddNewComment(commentData) {\n  debugger;\n  return async dispatch => {\n    debugger;\n    dispatch(addComment());\n\n    try {\n      dispatch(addCommentSuccess(commentData));\n    } catch (error) {\n      dispatch(addCommentError());\n    }\n  };\n}\n_c = AddNewComment;\nexport const getCommentsStart = () => ({\n  type: GET_COMMENTS\n});\nexport const getCommentsSuccess = data => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: data\n});\nexport const getCommentsError = () => ({\n  type: GET_COMMENTS_ERROR\n});\nexport const addComment = () => ({\n  type: ADD_COMMENT\n});\nexport const addCommentSuccess = data => ({\n  type: ADD_COMMENT_SUCCESS,\n  payload: data\n});\nexport const addCommentError = () => ({\n  type: ADD_COMMENT_ERROR\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewComment\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/actions/CommentsActions.js"],"names":["GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_ERROR","ADD_COMMENT","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","AxiosClient","getComments","dispatch","getCommentsStart","get","then","comments","getCommentsSuccess","data","error","getCommentsError","AddNewComment","commentData","addComment","addCommentSuccess","addCommentError","type","payload"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,mBALF,EAMEC,iBANF,QAOO,UAPP;AAQA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;;AAEA,QAAI;AACF,YAAMH,WAAW,CAACI,GAAZ,CAAiB,WAAjB,EAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AACpDJ,QAAAA,QAAQ,CAACK,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAAR;AACD,OAFK,CAAN;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAACQ,gBAAgB,EAAjB,CAAR;AACD;AACF,GAVD;AAWD;AAED,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AAAC;AAC1C,SAAO,MAAOV,QAAP,IAAoB;AAC7B;AACIA,IAAAA,QAAQ,CAACW,UAAU,EAAX,CAAR;;AAEA,QAAI;AACFX,MAAAA,QAAQ,CAACY,iBAAiB,CAACF,WAAD,CAAlB,CAAR;AACD,KAFD,CAEE,OAAOH,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAACa,eAAe,EAAhB,CAAR;AACD;AACF,GATD;AAUD;KAXeJ,a;AAahB,OAAO,MAAMR,gBAAgB,GAAG,OAAO;AACrCa,EAAAA,IAAI,EAAEtB;AAD+B,CAAP,CAAzB;AAIP,OAAO,MAAMa,kBAAkB,GAAGC,IAAI,KAAK;AACzCQ,EAAAA,IAAI,EAAErB,oBADmC;AAEzCsB,EAAAA,OAAO,EAAET;AAFgC,CAAL,CAA/B;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACrCM,EAAAA,IAAI,EAAEpB;AAD+B,CAAP,CAAzB;AAIP,OAAO,MAAMiB,UAAU,GAAG,OAAO;AAC/BG,EAAAA,IAAI,EAAEnB;AADyB,CAAP,CAAnB;AAGP,OAAO,MAAMiB,iBAAiB,GAAGN,IAAI,KAAK;AACxCQ,EAAAA,IAAI,EAAElB,mBADkC;AAExCmB,EAAAA,OAAO,EAAET;AAF+B,CAAL,CAA9B;AAIP,OAAO,MAAMO,eAAe,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEjB;AAD8B,CAAP,CAAxB","sourcesContent":["import {\n  GET_COMMENTS,\n  GET_COMMENTS_SUCCESS,\n  GET_COMMENTS_ERROR,\n  ADD_COMMENT,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_ERROR,\n} from \"../types\";\nimport AxiosClient from \"../config/AxiosConfig\";\n\nexport function getComments() {\n  return async (dispatch) => {\n    dispatch(getCommentsStart());\n\n    try {\n      await AxiosClient.get(`/comments`).then((comments) => {\n        dispatch(getCommentsSuccess(comments.data));\n      });\n    } catch (error) {\n      dispatch(getCommentsError());\n    }\n  };\n}\n\nexport function AddNewComment(commentData) {debugger\n  return async (dispatch) => {\ndebugger\n    dispatch(addComment());\n\n    try {\n      dispatch(addCommentSuccess(commentData));\n    } catch (error) {\n      dispatch(addCommentError());\n    }\n  };\n}\n\nexport const getCommentsStart = () => ({\n  type: GET_COMMENTS,\n});\n\nexport const getCommentsSuccess = data => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: data,\n});\n\nexport const getCommentsError = () => ({\n  type: GET_COMMENTS_ERROR,\n});\n\nexport const addComment = () => ({\n  type: ADD_COMMENT,\n});\nexport const addCommentSuccess = data => ({\n  type: ADD_COMMENT_SUCCESS,\n  payload: data,\n});\nexport const addCommentError = () => ({\n  type: ADD_COMMENT_ERROR,\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GET_POSTS,GET_POSTS_SUCCESS,GET_POSTS_ERROR}from'../types';import AxiosClient from'../config/AxiosConfig';export function getPosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(getPostsStart());_context.prev=1;_context.next=4;return AxiosClient.get(\"/posts\").then(function(posts){dispatch(getPostsSuccess(posts.data));});case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);dispatch(getPostsError());case 9:case\"end\":return _context.stop();}}},_callee,null,[[1,6]]);}));return function(_x){return _ref.apply(this,arguments);};}();}export var getPostsStart=function getPostsStart(){return{type:GET_POSTS};};export var getPostsSuccess=function getPostsSuccess(data){return{type:GET_POSTS_SUCCESS,payload:data};};export var getPostsError=function getPostsError(){return{type:GET_POSTS_ERROR};};","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/src/actions/PostsActions.js"],"names":["GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_ERROR","AxiosClient","getPosts","dispatch","getPostsStart","get","then","posts","getPostsSuccess","data","getPostsError","type","payload"],"mappings":"+YAAA,OACIA,SADJ,CAEIC,iBAFJ,CAGIC,eAHJ,KAKK,UALL,CAMA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CAGA,MAAO,SAASC,CAAAA,QAAT,EAAoB,CAEvB,+FAAO,iBAAOC,QAAP,kHAEHA,QAAQ,CAACC,aAAa,EAAd,CAAR,CAFG,sCAKOH,CAAAA,WAAW,CAACI,GAAZ,WACDC,IADC,CACI,SAAAC,KAAK,CAAI,CAEXJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,IAAP,CAAhB,CAAR,CACH,CAJC,CALP,sFAWCN,QAAQ,CAACO,aAAa,EAAd,CAAR,CAXD,mEAAP,+DAcH,CAED,MAAO,IAAMN,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAO,CAChCO,IAAI,CAAEb,SAD0B,CAAP,EAAtB,CAIP,MAAO,IAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,IAAI,QAAK,CACpCE,IAAI,CAAEZ,iBAD8B,CAEpCa,OAAO,CAAEH,IAF2B,CAAL,EAA5B,CAKP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAO,CAChCC,IAAI,CAAEX,eAD0B,CAAP,EAAtB","sourcesContent":["import {\n    GET_POSTS,\n    GET_POSTS_SUCCESS,\n    GET_POSTS_ERROR\n}\nfrom '../types';\nimport AxiosClient from '../config/AxiosConfig';\n\n\nexport function getPosts() {\n    \n    return async (dispatch) => {\n\n        dispatch(getPostsStart());\n\n        try {\n            await AxiosClient.get(`/posts`)\n                .then(posts => {\n                    \n                    dispatch(getPostsSuccess(posts.data));\n                })\n        } catch (error) {\n            dispatch(getPostsError());\n        }\n    }\n}\n\nexport const getPostsStart = () => ({\n    type: GET_POSTS\n})\n\nexport const getPostsSuccess = data => ({\n    type: GET_POSTS_SUCCESS,\n    payload: data\n})\n\nexport const getPostsError = () => ({\n    type: GET_POSTS_ERROR\n})"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/hooks/useComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AddNewComment } from '../actions/CommentsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseComment = (id, initialState) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const SvdNewComment = comment => dispatch(AddNewComment(comment));\n\n  const allComments = useSelector(state => state.commentsState.comments);\n  const [comment, SvdComment] = useState(initialState);\n\n  const addComment = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      body\n    } = comment;\n\n    if (name === '' || email === '' || body === '') {\n      console.log('Incomplete Data');\n      return;\n    }\n\n    comment.id = parseInt(allComments.length + 1);\n    comment.postId = id;\n    SvdNewComment([...allComments, comment]);\n  };\n\n  const handleOnchange = e => {\n    SvdComment({ ...comment,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const Registrar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addComment,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        id: \"body\",\n        name: \"body\",\n        type: \"text-area\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  return [comment, Registrar];\n};\n\n_s(UseComment, \"HHdJmWXyjU8XBuVPAyeB0w65iRE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UseComment;\nexport default UseComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseComment\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/hooks/useComment.js"],"names":["React","useState","AddNewComment","useDispatch","useSelector","UseComment","id","initialState","dispatch","SvdNewComment","comment","allComments","state","commentsState","comments","SvdComment","addComment","e","preventDefault","name","email","body","console","log","parseInt","length","postId","handleOnchange","target","value","Registrar"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport {AddNewComment} from '../actions/CommentsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst UseComment = (id,initialState) => {\n\n    const dispatch = useDispatch();\n    const SvdNewComment = (comment) => dispatch(AddNewComment(comment));\n\n    const allComments = useSelector((state) => state.commentsState.comments);\n\n\n    const [comment,SvdComment] = useState(initialState);\n\n const addComment = e =>{\n  \n    e.preventDefault();\n\n    const {name,email,body} = comment;\n    \n\n    if(name === '' || email === '' || body === ''){\n        console.log('Incomplete Data');\n        return;\n    }\n\n    comment.id = parseInt(allComments.length+1);\n    comment.postId = id;\n\n    SvdNewComment([...allComments,comment]);\n };\n\n const handleOnchange = e =>{\n    SvdComment({\n        ...comment,\n        [e.target.name]: e.target.value\n    })\n }\n\n const Registrar = () =>(\n    <div className=\"mb-4\"> \n    <form onSubmit={addComment}>\n      <label>Name: </label>\n      <input className=\"mb-1\" id=\"name\" name=\"name\" type=\"text\" onChange={e=>handleOnchange(e)} />\n      <label>Email: </label>\n      <input className=\"mb-1\" id=\"email\" name=\"email\" type=\"text\" onChange={e=>handleOnchange(e)}/>\n      <label>Body: </label>\n      <input className=\"mb-1\"  id=\"body\" name=\"body\" type=\"text-area\" onChange={e=>handleOnchange(e)}/>\n      <input type=\"submit\" value=\"Add Comment\" />\n    </form>\n  </div>\n )\n\n return [comment, Registrar];\n\n};\n\nexport default UseComment;\n"]},"metadata":{},"sourceType":"module"}
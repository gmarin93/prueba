{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [posts, Posts] = useState([]);\n  const [comments, Comments] = useState([]);\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDataAPI() {\n      debugger; //Getting posts data\n\n      const postsList = () => dispatch(getPosts());\n\n      postsList.length > 0 ? Posts(postsList) : null; //Getting comments data\n\n      const commentsList = () => dispatch(getComments());\n\n      Comments(commentsList);\n    }\n    /**\n     * Match posts and their right comments\n     */\n\n\n    function matchData() {\n      debugger;\n      let postObject = {};\n      let postsArray = [];\n\n      if (Object.keys(posts).length > 0) {\n        posts.map(post => {\n          let commentsFiltered = comments.filter(e => e.postid === post.postid);\n          postObject = {\n            post: post,\n            commets: commentsFiltered\n          };\n          postsArray.push(postObject);\n          debugger;\n        });\n        console.log(postsArray);\n      }\n    }\n\n    getDataAPI();\n    setTimeout(e => {\n      matchData();\n    }, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Index, \"1dfr2iNVzKesex2DTvuvsOnZT7o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","getComments","Index","dispatch","posts","Posts","comments","Comments","getDataAPI","postsList","length","commentsList","matchData","postObject","postsArray","Object","keys","map","post","commentsFiltered","filter","e","postid","commets","push","console","log","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,KAAD,EAAQC,KAAR,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,QAAD,EAAWC,QAAX,IAAuBX,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASW,UAAT,GAAsB;AAClB,eADkB,CAEpB;;AACA,YAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACH,QAAQ,EAAT,CAAhC;;AACAS,MAAAA,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAwBL,KAAK,CAACI,SAAD,CAA7B,GAA2C,IAA3C,CAJoB,CAMpB;;AACA,YAAME,YAAY,GAAG,MAAMR,QAAQ,CAACF,WAAW,EAAZ,CAAnC;;AACEM,MAAAA,QAAQ,CAACI,YAAD,CAAR;AACH;AAEL;AACA;AACA;;;AACI,aAASC,SAAT,GAAqB;AACjB;AACF,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAIC,MAAM,CAACC,IAAP,CAAYZ,KAAZ,EAAmBM,MAAnB,GAA4B,CAAhC,EAAmC;AACjCN,QAAAA,KAAK,CAACa,GAAN,CAAWC,IAAD,IAAU;AAClB,cAAIC,gBAAgB,GAAGb,QAAQ,CAACc,MAAT,CACpBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACI,MADJ,CAAvB;AAIAT,UAAAA,UAAU,GAAG;AACXK,YAAAA,IAAI,EAAEA,IADK;AAEXK,YAAAA,OAAO,EAAEJ;AAFE,WAAb;AAKAL,UAAAA,UAAU,CAACU,IAAX,CAAgBX,UAAhB;AACA;AACD,SAZD;AAaAY,QAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACD;AACF;;AAEDN,IAAAA,UAAU;AAEVmB,IAAAA,UAAU,CAACN,CAAC,IAAE;AACVT,MAAAA,SAAS;AACZ,KAFS,EAER,IAFQ,CAAV;AAID,GA/CQ,EA+CN,EA/CM,CAAT;AAiDA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxDD;;GAAMV,K;UACaJ,W;;;KADbI,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n  const [posts, Posts] = useState([]);\n  const [comments, Comments] = useState([]);\n\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDataAPI() {\n        debugger\n      //Getting posts data\n      const postsList = () => dispatch(getPosts());\n      postsList.length > 0 ?  Posts(postsList) : null;\n     \n      //Getting comments data\n      const commentsList = () => dispatch(getComments());\n        Comments(commentsList);\n    }\n\n/**\n * Match posts and their right comments\n */\n    function matchData() {\n        debugger\n      let postObject = {};\n      let postsArray = [];\n\n      if (Object.keys(posts).length > 0) {\n        posts.map((post) => {\n          let commentsFiltered = comments.filter(\n            (e) => e.postid === post.postid\n          );\n\n          postObject = {\n            post: post,\n            commets: commentsFiltered,\n          };\n          \n          postsArray.push(postObject);\n          debugger\n        });\n        console.log(postsArray);\n      } \n    }\n\n    getDataAPI();\n\n    setTimeout(e=>{\n        matchData();\n    },5000);\n\n  }, []);\n\n  return <div></div>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
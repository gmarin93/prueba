{"ast":null,"code":"import { GET_COMMENTS, GET_COMMENTS_SUCCESS, GET_COMMENTS_ERROR, ADD_COMMENT, ADD_COMMENT_SUCCESS, ADD_COMMENT_ERROR } from '../types';\nimport AxiosClient from '../config/AxiosConfig';\nexport function getComments() {\n  return async dispatch => {\n    dispatch(getCommentsStart());\n\n    try {\n      await AxiosClient.get(`/comments`).then(comments => {\n        dispatch(getCommentsSuccess(comments.data));\n      });\n    } catch (error) {\n      dispatch(getCommentsError());\n    }\n  };\n}\n;\nexport function AddNewComment(commentData) {\n  return async dispatch => {\n    dispatch(addComment());\n\n    try {\n      await AxiosClient.get(`/comments`).then(comments => {\n        dispatch(addCommentSuccess(comments.data));\n      });\n    } catch (error) {\n      dispatch(addCommentError());\n    }\n  };\n}\n_c = AddNewComment;\nexport const getCommentsStart = () => ({\n  type: GET_COMMENTS\n});\nexport const getCommentsSuccess = data => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: data\n});\nexport const getCommentsError = () => ({\n  type: GET_COMMENTS_ERROR\n});\nexport const addComment = () => ({\n  type: ADD_COMMENT\n});\nexport const addCommentSuccess = data => ({\n  type: ADD_COMMENT_SUCCESS,\n  payload: data\n});\nexport const addCommentError = () => ({\n  type: ADD_COMMENT_ERROR\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewComment\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/actions/CommentsActions.js"],"names":["GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_ERROR","ADD_COMMENT","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","AxiosClient","getComments","dispatch","getCommentsStart","get","then","comments","getCommentsSuccess","data","error","getCommentsError","AddNewComment","commentData","addComment","addCommentSuccess","addCommentError","type","payload"],"mappings":"AAAA,SACIA,YADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,WAJJ,EAKIC,mBALJ,EAMIC,iBANJ,QAQK,UARL;AASA,OAAOC,WAAP,MAAwB,uBAAxB;AAGA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO,MAAOC,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;;AAEA,QAAI;AACA,YAAMH,WAAW,CAACI,GAAZ,CAAiB,WAAjB,EACDC,IADC,CACIC,QAAQ,IAAI;AAEdJ,QAAAA,QAAQ,CAACK,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAAR;AAEH,OALC,CAAN;AAMH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZP,MAAAA,QAAQ,CAACQ,gBAAgB,EAAjB,CAAR;AACH;AACJ,GAdD;AAeH;AAAA;AAED,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AACvC,SAAO,MAAOV,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAACW,UAAU,EAAX,CAAR;;AAEA,QAAI;AACA,YAAMb,WAAW,CAACI,GAAZ,CAAiB,WAAjB,EACDC,IADC,CACIC,QAAQ,IAAI;AAEdJ,QAAAA,QAAQ,CAACY,iBAAiB,CAACR,QAAQ,CAACE,IAAV,CAAlB,CAAR;AAEH,OALC,CAAN;AAMH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZP,MAAAA,QAAQ,CAACa,eAAe,EAAhB,CAAR;AACH;AACJ,GAdD;AAeH;KAhBeJ,a;AAkBhB,OAAO,MAAMR,gBAAgB,GAAG,OAAO;AACnCa,EAAAA,IAAI,EAAEtB;AAD6B,CAAP,CAAzB;AAIP,OAAO,MAAMa,kBAAkB,GAAGC,IAAI,KAAK;AACvCQ,EAAAA,IAAI,EAAErB,oBADiC;AAEvCsB,EAAAA,OAAO,EAAET;AAF8B,CAAL,CAA/B;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACnCM,EAAAA,IAAI,EAAEpB;AAD6B,CAAP,CAAzB;AAIP,OAAO,MAAMiB,UAAU,GAAG,OAAO;AAC7BG,EAAAA,IAAI,EAAEnB;AADuB,CAAP,CAAnB;AAGP,OAAO,MAAMiB,iBAAiB,GAAGN,IAAI,KAAK;AACtCQ,EAAAA,IAAI,EAAElB,mBADgC;AAEtCmB,EAAAA,OAAO,EAAET;AAF6B,CAAL,CAA9B;AAIP,OAAO,MAAMO,eAAe,GAAG,OAAO;AAClCC,EAAAA,IAAI,EAAEjB;AAD4B,CAAP,CAAxB","sourcesContent":["import {\n    GET_COMMENTS,\n    GET_COMMENTS_SUCCESS,\n    GET_COMMENTS_ERROR,\n    ADD_COMMENT,\n    ADD_COMMENT_SUCCESS,\n    ADD_COMMENT_ERROR\n}\nfrom '../types';\nimport AxiosClient from '../config/AxiosConfig';\n\n\nexport function getComments() {\n    return async (dispatch) => {\n\n        dispatch(getCommentsStart());\n\n        try {\n            await AxiosClient.get(`/comments`)\n                .then(comments => {\n\n                    dispatch(getCommentsSuccess(comments.data));\n\n                })\n        } catch (error) {\n            dispatch(getCommentsError());\n        }\n    }\n};\n\nexport function AddNewComment(commentData) {\n    return async (dispatch) => {\n\n        dispatch(addComment());\n\n        try {\n            await AxiosClient.get(`/comments`)\n                .then(comments => {\n\n                    dispatch(addCommentSuccess(comments.data));\n\n                })\n        } catch (error) {\n            dispatch(addCommentError());\n        }\n    }\n}\n\nexport const getCommentsStart = () => ({\n    type: GET_COMMENTS\n})\n\nexport const getCommentsSuccess = data => ({\n    type: GET_COMMENTS_SUCCESS,\n    payload: data\n})\n\nexport const getCommentsError = () => ({\n    type: GET_COMMENTS_ERROR\n})\n\nexport const addComment = () => ({\n    type: ADD_COMMENT\n});\nexport const addCommentSuccess = data => ({\n    type: ADD_COMMENT_SUCCESS,\n    payload: data\n});\nexport const addCommentError = () => ({\n    type: ADD_COMMENT_ERROR\n});"]},"metadata":{},"sourceType":"module"}
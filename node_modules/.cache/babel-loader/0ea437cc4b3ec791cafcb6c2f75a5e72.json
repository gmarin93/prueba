{"ast":null,"code":"import _regeneratorRuntime from\"/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GET_COMMENTS,GET_COMMENTS_SUCCESS,GET_COMMENTS_ERROR,ADD_COMMENT,ADD_COMMENT_SUCCESS,ADD_COMMENT_ERROR,GET_DATA_STATE,GET_DATA_STATE_SUCCESS}from\"../types\";import AxiosClient from\"../config/AxiosConfig\";export function getComments(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(getCommentsStart());_context.prev=1;_context.next=4;return AxiosClient.get(\"/comments\").then(function(comments){dispatch(getCommentsSuccess(comments.data));});case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);dispatch(getCommentsError());case 9:case\"end\":return _context.stop();}}},_callee,null,[[1,6]]);}));return function(_x){return _ref.apply(this,arguments);};}();}export function AddNewComment(commentsData){debugger;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(addComment());try{dispatch(addCommentSuccess(commentsData));}catch(error){dispatch(addCommentError());}case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export var getCommentsStart=function getCommentsStart(){return{type:GET_COMMENTS};};export var getCommentsSuccess=function getCommentsSuccess(data){return{type:GET_COMMENTS_SUCCESS,payload:data};};export var getCommentsError=function getCommentsError(){return{type:GET_COMMENTS_ERROR};};export var addComment=function addComment(){return{type:ADD_COMMENT};};export var addCommentSuccess=function addCommentSuccess(data){return{type:ADD_COMMENT_SUCCESS,payload:data};};export var addCommentError=function addCommentError(){return{type:ADD_COMMENT_ERROR};};export var getCommentsState=function getCommentsState(){return{type:GET_DATA_STATE};};export var getCommentsStateSuccesss=function getCommentsStateSuccesss(){return{type:GET_DATA_STATE};};","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/Challenges/chellengesGmarin93/postcommentsapp/src/actions/CommentsActions.js"],"names":["GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_ERROR","ADD_COMMENT","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","GET_DATA_STATE","GET_DATA_STATE_SUCCESS","AxiosClient","getComments","dispatch","getCommentsStart","get","then","comments","getCommentsSuccess","data","getCommentsError","AddNewComment","commentsData","addComment","addCommentSuccess","error","addCommentError","type","payload","getCommentsState","getCommentsStateSuccesss"],"mappings":"+YAAA,OACEA,YADF,CAEEC,oBAFF,CAGEC,kBAHF,CAIEC,WAJF,CAKEC,mBALF,CAMEC,iBANF,CAOEC,cAPF,CAQEC,sBARF,KASO,UATP,CAUA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CAEA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC5B,+FAAO,iBAAOC,QAAP,kHACLA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR,CADK,sCAIGH,CAAAA,WAAW,CAACI,GAAZ,cAA6BC,IAA7B,CAAkC,SAACC,QAAD,CAAc,CACpDJ,QAAQ,CAACK,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAAR,CACD,CAFK,CAJH,sFAQHN,QAAQ,CAACO,gBAAgB,EAAjB,CAAR,CARG,mEAAP,+DAWD,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBC,YAAvB,CAAqC,CAAC,SAC3C,gGAAO,kBAAOT,QAAP,sHAELA,QAAQ,CAACU,UAAU,EAAX,CAAR,CAEA,GAAI,CACFV,QAAQ,CAACW,iBAAiB,CAACF,YAAD,CAAlB,CAAR,CACD,CAAC,MAAOG,KAAP,CAAc,CACdZ,QAAQ,CAACa,eAAe,EAAhB,CAAR,CACD,CARI,wDAAP,iEAUD,CAED,MAAO,IAAMZ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CACrCa,IAAI,CAAExB,YAD+B,CAAP,EAAzB,CAIP,MAAO,IAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,IAAI,QAAK,CACzCQ,IAAI,CAAEvB,oBADmC,CAEzCwB,OAAO,CAAET,IAFgC,CAAL,EAA/B,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CACrCO,IAAI,CAAEtB,kBAD+B,CAAP,EAAzB,CAIP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAO,CAC/BI,IAAI,CAAErB,WADyB,CAAP,EAAnB,CAGP,MAAO,IAAMkB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAL,IAAI,QAAK,CACxCQ,IAAI,CAAEpB,mBADkC,CAExCqB,OAAO,CAAET,IAF+B,CAAL,EAA9B,CAIP,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAO,CACpCC,IAAI,CAAEnB,iBAD8B,CAAP,EAAxB,CAGP,MAAO,IAAMqB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CACnCF,IAAI,CAAElB,cAD6B,CAAP,EAAzB,CAGP,MAAO,IAAMqB,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,SAAO,CAC3CH,IAAI,CAAElB,cADqC,CAAP,EAAjC","sourcesContent":["import {\n  GET_COMMENTS,\n  GET_COMMENTS_SUCCESS,\n  GET_COMMENTS_ERROR,\n  ADD_COMMENT,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_ERROR,\n  GET_DATA_STATE,\n  GET_DATA_STATE_SUCCESS\n} from \"../types\";\nimport AxiosClient from \"../config/AxiosConfig\";\n\nexport function getComments() {\n  return async (dispatch) => {\n    dispatch(getCommentsStart());\n\n    try {\n      await AxiosClient.get(`/comments`).then((comments) => {\n        dispatch(getCommentsSuccess(comments.data));\n      });\n    } catch (error) {\n      dispatch(getCommentsError());\n    }\n  };\n}\n\nexport function AddNewComment(commentsData) {debugger\n  return async (dispatch) => {\n\n    dispatch(addComment());\n\n    try {\n      dispatch(addCommentSuccess(commentsData));\n    } catch (error) {\n      dispatch(addCommentError());\n    }\n  };\n}\n\nexport const getCommentsStart = () => ({\n  type: GET_COMMENTS,\n});\n\nexport const getCommentsSuccess = data => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: data,\n});\n\nexport const getCommentsError = () => ({\n  type: GET_COMMENTS_ERROR,\n});\n\nexport const addComment = () => ({\n  type: ADD_COMMENT,\n});\nexport const addCommentSuccess = data => ({\n  type: ADD_COMMENT_SUCCESS,\n  payload: data,\n});\nexport const addCommentError = () => ({\n  type: ADD_COMMENT_ERROR,\n});\nexport const getCommentsState = () => ({\n    type: GET_DATA_STATE\n  });\nexport const getCommentsStateSuccesss = () => ({\n    type: GET_DATA_STATE\n  });\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/components/NewComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AddNewComment } from '../actions/CommentsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewComment = postId => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const SvdNewComment = comment => dispatch(AddNewComment(comment));\n\n  const allComments = useSelector(state => state.commentsState.comments);\n  const [comment, SvdComment] = useState({\n    postId: 0,\n    id: 0,\n    name: '',\n    email: '',\n    body: ''\n  });\n\n  const addComment = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      body\n    } = comment;\n\n    if (name != '' || email != '' || body != '') {\n      console.log('Incomplete Data');\n      return;\n    }\n\n    comment.id = parseInt(allComments.length - 1);\n    comment.postId = postId;\n    SvdNewComment(comment);\n  };\n\n  const handleOnchange = e => {\n    SvdNewComment({ ...comment,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => addComment(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mb-1\",\n        name: \"body\",\n        type: \"text-area\",\n        onChange: e => handleOnchange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewComment, \"oAcm4qMMwK6PX7fFEll+XP12bBE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewComment;\nexport default NewComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/components/NewComment.js"],"names":["React","useState","AddNewComment","useDispatch","useSelector","NewComment","postId","dispatch","SvdNewComment","comment","allComments","state","commentsState","comments","SvdComment","id","name","email","body","addComment","e","preventDefault","console","log","parseInt","length","handleOnchange","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport {AddNewComment} from '../actions/CommentsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst NewComment = postId => {\n\n    const dispatch = useDispatch();\n    const SvdNewComment = (comment) => dispatch(AddNewComment(comment));\n\n    const allComments = useSelector((state) => state.commentsState.comments);\n\n\n    const [comment,SvdComment] = useState({\n        postId:0,\n        id:0,\n        name:'',\n        email:'',\n        body:''\n    });\n\n const addComment = e =>{\n  \n    e.preventDefault();\n\n    const {name,email,body} = comment;\n\n    if(name != '' || email != '' || body != ''){\n        console.log('Incomplete Data');\n        return;\n    }\n\n    comment.id = parseInt(allComments.length - 1);\n    comment.postId = postId;\n\n    SvdNewComment(comment);\n\n };\n\n const handleOnchange = e =>{\n    SvdNewComment({\n        ...comment,\n        [e.target.name]: e.target.value\n    })\n }\n\n  return (\n    <div className=\"mb-4\"> \n      <form onSubmit={()=>addComment()}>\n        <label>Name: </label>\n        <input className=\"mb-1\" id=\"name\" name=\"name\" type=\"text\" onChange={e=>handleOnchange(e)} />\n        <label>Email: </label>\n        <input className=\"mb-1\" id=\"email\" name=\"email\" type=\"text\" onChange={e=>handleOnchange(e)}/>\n        <label>Body: </label>\n        <input className=\"mb-1\"  name='body' type=\"text-area\" onChange={e=>handleOnchange(e)}/>\n        <input type=\"button\" value=\"Add Comment\" />\n      </form>\n    </div>\n  );\n};\n\nexport default NewComment;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const postsData = useSelector(state => state.postsState.posts);\n  const postLoading = useSelector(state => state.postsState.loading);\n  const commentLoading = useSelector(state => state.commentsState.loading);\n  const commentsData = useSelector(state => state.commentsState.comments);\n  const [matchedData, MatchingData] = useState([]);\n  useEffect(() => {\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts()); //Getting comments data\n\n      dispatch(getComments());\n    }\n\n    getDatsAPI();\n    matchData();\n  }, []);\n  /**\n   * Match posts and their right comments\n   */\n\n  function matchData() {\n    let arrayPosts = [];\n\n    if (Object.keys(postsData).length > 0) {\n      postsData.map(post => {\n        let commentsFiltered = commentsData.filter(e => e.postId === post.id);\n        arrayPosts.push({\n          post: post,\n          comments: commentsFiltered\n        });\n      });\n    }\n\n    return console.log(arrayPosts);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Index, \"zOHYZHTmAzUMoPgG+q/GjAt/rI8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/postcommentsapp/src/pages/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getPosts","getComments","Index","dispatch","postsData","state","postsState","posts","postLoading","loading","commentLoading","commentsState","commentsData","comments","matchedData","MatchingData","getDatsAPI","matchData","arrayPosts","Object","keys","length","map","post","commentsFiltered","filter","e","postId","id","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA7B,CAA7B;AACA,QAAMC,WAAW,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBG,OAA7B,CAA/B;AACA,QAAMC,cAAc,GAAGX,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACM,aAAN,CAAoBF,OAAhC,CAAlC;AACA,QAAMG,YAAY,GAAGb,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACM,aAAN,CAAoBE,QAAhC,CAAhC;AAEA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd;AACJ;AACA;AACI,aAASmB,UAAT,GAAsB;AACpB;AACAb,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR,CAFoB,CAGpB;;AACAG,MAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACD;;AAEDe,IAAAA,UAAU;AACVC,IAAAA,SAAS;AAEV,GAfQ,EAeN,EAfM,CAAT;AAiBA;AACF;AACA;;AACE,WAASA,SAAT,GAAqB;AAEnB,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAIC,MAAM,CAACC,IAAP,CAAYhB,SAAZ,EAAuBiB,MAAvB,GAAgC,CAApC,EAAuC;AACrCjB,MAAAA,SAAS,CAACkB,GAAV,CAAeC,IAAD,IAAU;AACtB,YAAIC,gBAAgB,GAAGZ,YAAY,CAACa,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACK,EAA7C,CAAvB;AAEAV,QAAAA,UAAU,CAACW,IAAX,CAAgB;AACdN,UAAAA,IAAI,EAAEA,IADQ;AAEdV,UAAAA,QAAQ,EAAEW;AAFI,SAAhB;AAID,OAPD;AAQD;;AAEF,WAAOM,OAAO,CAACC,GAAR,CAAYb,UAAZ,CAAP;AACA;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjDD;;GAAMhB,K;UACaJ,W,EAECC,W,EACEA,W,EACGA,W,EACFA,W;;;KANjBG,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/PostsActions\";\nimport { getComments } from \"../actions/CommentsActions\";\n\nconst Index = () => {\n  const dispatch = useDispatch();\n\n  const postsData = useSelector((state) => state.postsState.posts);\n  const postLoading = useSelector((state) => state.postsState.loading);\n  const commentLoading = useSelector((state) => state.commentsState.loading);\n  const commentsData = useSelector((state) => state.commentsState.comments);\n\n  const [matchedData, MatchingData] = useState([]);\n\n  useEffect(() => {\n\n    /**\n     * Gets data from API\n     */\n    function getDatsAPI() {\n      //Getting posts data\n      dispatch(getPosts());\n      //Getting comments data\n      dispatch(getComments());\n    }\n\n    getDatsAPI();\n    matchData()\n\n  }, []);\n\n  /**\n   * Match posts and their right comments\n   */\n  function matchData() {\n\n    let arrayPosts = [];\n\n    if (Object.keys(postsData).length > 0) {\n      postsData.map((post) => {\n        let commentsFiltered = commentsData.filter((e) => e.postId === post.id);\n\n        arrayPosts.push({\n          post: post,\n          comments: commentsFiltered,\n        });\n      });\n    }\n\n   return console.log(arrayPosts);\n  }\n\n  return <div></div>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}